name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  markdown:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install markdownlint-cli
      run: npm install markdownlint-cli
    - name: Check markdown file(s)
      run: npx markdownlint '**/*.md' --ignore node_modules

  build:
    strategy:
      matrix:
        rust: [stable, beta, nightly, 1.41.0]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        default: true
        override: true
        toolchain: ${{matrix.rust}}
    - name: cargo build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --verbose --release --workspace --all-targets --all-features

  test:
    strategy:
      matrix:
        rust: [stable, beta, nightly, 1.41.0]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        default: true
        override: true
        toolchain: ${{matrix.rust}}
    - name: cargo test
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --verbose --workspace --all-targets --all-features

  fmt:
    strategy:
      matrix:
        rust: [stable, beta, nightly, 1.41.0]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        default: true
        override: true
        toolchain: ${{matrix.rust}}
        components: rustfmt
    - name: cargo fmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

  clippy:
    strategy:
      matrix:
        rust: [stable, beta, nightly, 1.41.0]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        default: true
        override: true
        toolchain: ${{matrix.rust}}
        components: clippy
    - name: cargo clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --verbose --workspace --all-targets --all-features -- -D warnings
